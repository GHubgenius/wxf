#
# Contains the name of the class being stacked and available commands
#

module WXf
module WXfui
module Console
module Processing

  
  class DbExploitProcs 
    
    include WXf::WXfui::Console::Operations::ModuleCommandOperator


    
    def name
      "Exploit" 
    end
  
    def avail_args; {"exploit" => "runs the exploit", "stop"    => "stops the webserver"}; end 
    
    
    #
    # Checks for need of web instance, then handles direction from there
    # Not in use, logic for creating and destroying a web server is in the wxfcore/exploit.rb file
    #
    def web_check    
      if (activity.pay)
        case activity.pay.requires_webserver
        when "0"
        webinst = nil
        when "1"
        webinst = Webserver
        end
     end    
    end
    
    
    #
    #
    #
    def arg_stop   
                if (activity.respond_to?('exp')) and (activity.exp.respond_to?('svr'))
                        print("wXf is shutting down the WEBrick server...." + "\n")
                    if activity.exp.svr.respond_to?('shutdown')
                        activity.exp.svr.shutdown
                        activity.exp.svr = nil
                    end
                else
                    print("There is no instance of a WEBrick server running" + "\n")
                end
     end
    
        
        
    #
    # Runs run_exploit command in WXf::WXfcore
    #
    def arg_exploit(*cmd)
        activity.run_exploit(control)
    end
     
  end
  
  class Create_Exploit
    include WXf::WXfui::Console::Operations::ModuleCommandOperator
        
    
        #
        #
        #
        def name
          "Create_Exploit" 
        end
        
        
        #
        #
        #
        def avail_args; { "commit" => "Commit the exploit to the database. !!ENSURE TO SHOW/SET OPTIONS!!"}; end 
        
        
        #
        #
        #
        def arg_commit(*cmd)
         control.prnt_gen(" Commit exploit #{in_focus.options['NAME']} to database")
          begin
            WXFCORE.db.create_exploit(in_focus.options)
          rescue
            puts "[wXf] Error adding exploit to database: #{$!}"
          end
        end
        
        
        #
        #
        #
        def arg_help
          in_focus.help
        end

  end
  
end end end end